import runtime;
import maybe;
import nemo_parser;
import nemo_translator;

testNemoParser(i: int, s: string, verbose: bool) -> void{
    example = getFileContent(s);
    println("TEST" + i2s(i) + ":" + s + ":");
    if(verbose){println(example)};
    // parsing
    p1 = parse(example);
    err = Prog([], nTest(Int(0)));
    p1sure = either(p1, err);
    println("   parsing:");
    if(p1sure == err){
        println("   Error:Parse");
        quit(-1);
    } else {
        if(verbose){
            println(p1sure);
        } else {
            println("   Success");
        }
    }

    println("   translating:");
    p2 = n2v(p1sure);
    if(verbose){
        println(p2);
    } else {
        println("   Success")
    }
    println("   running:");
    vExecute(p2);
    println("   stopped;");
}

main(){
    tests = ["example", "type", "test", "union", "long"];
    mapi(tests, \i, x -> testNemoParser(i, "./test/" + x + ".txt", true));
}