import runtime;
import arexp;
//import rpnstack;
import rpnpol;
import maybe;


// testRpnStack(t1: ArExp) -> void{
//     println("\nTEST: rpnstack");
//     println("\n   rpn2s(rpn):");
//     rpn1 = ae2rpn(t1sure);
//     println(rpn2s(rpn1));
//     println("   rpni(rpn):");
//     println(either(rpn2i(rpn1),-1));
//     println("   ae2s(rpn2ae(rpn)):");
//     println(ae2s(either(rpn2ae(rpn1), ArInt(0))));
// }

testArExp() -> ArExp{
    t1 = parse("(1+((2/(4+5))-3))");
    t1sure = either(t1, ArInt(0));
    println("   raw ArExp:");
    println(t1sure);
    println("   ae2s(ArExp):");
    println(ae2s(t1sure));
    t1sure;
}

testRpnPol(t1sure: ArExp) -> void{
    /**
     * if rpnpol imported
     * will break on trees with ArVar(v)
     */
    println("\nTEST: rpnpol");
    println("\n   rpn2s(rpn):");
    rpn1 = ae2rpni(t1sure);
    println(rpni2s(rpn1));
    println("   evalRpn(rpn):");
    println(either(evalRpn(rpn1),-1));
    println("   rpni2rpne(rpn):");
    rpn2 = rpni2rpnae(rpn1);
    println(rpn2);
    println("   evalRpn(rpn2):");
    t2 = either(evalRpn(rpn2), ArInt(0));
    println(t2);
    println("   ae2s(t2):");
    println(ae2s(t2))
}

getSubTree() -> Tree<string, int>{
    input = getFileContent("./in.csv");
    pairArray = map(strSplit(input, ", "), \ elem -> Pair(strSplit(elem, "=")[0], strSplit(elem, "=")[1]));
    mapTree(pairs2tree(pairArray), s2i);
}

testAeSub() -> void{
    println("\nTEST: AeSub");
    t1 = either(parse("(a+((e/(d+b))-c))"), ArInt(0));
    println("   raw ArExp:");
    println(t1);
    println("   ae2s(ArExp):");
    println(ae2s(t1));
    t2 = aeSub(t1, getSubTree());
    println("   ae2s(aeSub(ArExp)):");
    println2(ae2s(either(t2, ArInt(0))));
}

testAeDiff() -> void{
    println("\nTEST: AeDiff");
    t1 = either(parse("(a+((e/(d+b))-c))"), ArInt(0));
    println("   raw ArExp:");
    println(t1);
    println("   ae2s(ArExp):");
    println(ae2s(t1));
    t2 = aeDiff(t1);
    println("   ae2s(aeDiff(ArExp)):");
    println2(ae2s(t2));
}

testAeSmp() -> void{
    println("\nTEST: AeSmp");
    t1 = either(parse("(1 + ((((1 * (d + b)) - (e * (1 + 1))) / ((d + b) * (d + b))) - 1))"), ArInt(0));
    println("   raw ArExp:");
    println(t1);
    println("   ae2s(ArExp):");
    println(ae2s(t1));
    t2 = aeSmp(t1);
    println("   ae2s(aeSmp(ArExp)):");
    println2(ae2s(t2));
}

main() {
    t1 = testArExp();
    testRpnPol(t1);
    testAeSub();
    testAeDiff();
    testAeSmp();
}
